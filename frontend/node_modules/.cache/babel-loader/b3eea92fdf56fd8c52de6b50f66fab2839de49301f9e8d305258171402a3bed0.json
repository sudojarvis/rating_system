{"ast":null,"code":"var _jsxFileName = \"/media/ashish/ubuntu/rating_system/src/components/AudiobookList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import AudiobookCard from './AudiobookCard';\nimport FilterBar from './FilterBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudiobookList = () => {\n  _s();\n  const [audiobooks, setAudiobooks] = useState([]);\n  const [filteredAudiobooks, setFilteredAudiobooks] = useState([]);\n  const [filters, setFilters] = useState({\n    author: '',\n    genre: '',\n    rating: ''\n  });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchAudiobooks = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/audiobooks/');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setAudiobooks(data);\n        setFilteredAudiobooks(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching audiobooks:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchAudiobooks();\n  }, []);\n  useEffect(() => {\n    if (audiobooks.length > 0) {\n      let filtered = audiobooks;\n      if (filters.author) {\n        filtered = filtered.filter(audiobook => audiobook.author.toLowerCase().includes(filters.author.toLowerCase()));\n      }\n      if (filters.genre) {\n        filtered = filtered.filter(audiobook => audiobook.genre === filters.genre);\n      }\n      if (filters.rating) {\n        filtered = filtered.filter(audiobook => audiobook.rating >= parseInt(filters.rating, 10));\n      }\n      setFilteredAudiobooks(filtered);\n    }\n  }, [filters, audiobooks]);\n  const handleFilterChange = (type, value) => {\n    setFilters({\n      ...filters,\n      [type]: value\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audiobook-list-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audiobook-list\",\n      children: filteredAudiobooks.map(audiobook =>\n      /*#__PURE__*/\n      // <AudiobookCard key={audiobook.id} audiobook={audiobook} />\n      _jsxDEV(\"div\", {\n        className: \"audiobook-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: audiobook.coverImage,\n          alt: audiobook.title,\n          className: \"audiobook-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audiobook-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: audiobook.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"by \", audiobook.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Genre:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 18\n            }, this), \" \", audiobook.genre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Rating:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 18\n            }, this), \" \", audiobook.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, audiobook.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(AudiobookList, \"QI3tpcP1khcaCAlaJ3flK73XJIE=\");\n_c = AudiobookList;\nexport default AudiobookList;\nvar _c;\n$RefreshReg$(_c, \"AudiobookList\");","map":{"version":3,"names":["React","useEffect","useState","FilterBar","jsxDEV","_jsxDEV","AudiobookList","_s","audiobooks","setAudiobooks","filteredAudiobooks","setFilteredAudiobooks","filters","setFilters","author","genre","rating","error","setError","loading","setLoading","fetchAudiobooks","response","fetch","ok","Error","data","json","console","message","length","filtered","filter","audiobook","toLowerCase","includes","parseInt","handleFilterChange","type","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","src","coverImage","alt","title","id","_c","$RefreshReg$"],"sources":["/media/ashish/ubuntu/rating_system/src/components/AudiobookList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n// import AudiobookCard from './AudiobookCard';\nimport FilterBar from './FilterBar';\n\nconst AudiobookList = () => {\n  const [audiobooks, setAudiobooks] = useState([]);\n  const [filteredAudiobooks, setFilteredAudiobooks] = useState([]);\n  const [filters, setFilters] = useState({ author: '', genre: '', rating: '' });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchAudiobooks = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/audiobooks/');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setAudiobooks(data);\n        setFilteredAudiobooks(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching audiobooks:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchAudiobooks();\n  }, []);\n\n  useEffect(() => {\n    if (audiobooks.length > 0) {\n      let filtered = audiobooks;\n      if (filters.author) {\n        filtered = filtered.filter(audiobook => audiobook.author.toLowerCase().includes(filters.author.toLowerCase()));\n      }\n      if (filters.genre) {\n        filtered = filtered.filter(audiobook => audiobook.genre === filters.genre);\n      }\n      if (filters.rating) {\n        filtered = filtered.filter(audiobook => audiobook.rating >= parseInt(filters.rating, 10));\n      }\n      setFilteredAudiobooks(filtered);\n    }\n  }, [filters, audiobooks]);\n\n  const handleFilterChange = (type, value) => {\n    setFilters({ ...filters, [type]: value });\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"audiobook-list-container\">\n      {/* <FilterBar onFilterChange={handleFilterChange} /> */}\n      <div className=\"audiobook-list\">\n        {filteredAudiobooks.map(audiobook => (\n          // <AudiobookCard key={audiobook.id} audiobook={audiobook} />\n          <div className=\"audiobook-card\" key={audiobook.id}>\n            <img src={audiobook.coverImage} alt={audiobook.title} className=\"audiobook-cover\" />\n            <div className=\"audiobook-details\">\n              <h2>{audiobook.title}</h2>\n              <h3>by {audiobook.author}</h3>\n              <p><strong>Genre:</strong> {audiobook.genre}</p>\n              <p><strong>Rating:</strong> {audiobook.rating}</p>\n            </div>\n          </div>\n          \n        \n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AudiobookList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}