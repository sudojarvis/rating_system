{"ast":null,"code":"var _jsxFileName = \"/media/ashish/ubuntu/rating_system/src/components/AudiobookList.js\",\n  _s = $RefreshSig$();\n// // import { set } from 'mongoose';\n// import React, { useEffect, useState } from 'react';\n\n// import AudiobookDetails from './AudiobookCard'\n\n// const AudiobookList = () => {\n//   const [audiobooks, setAudiobooks] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [response, setResponse] = useState(null);\n\n//   useEffect(() => {\n//     const fetchAudiobooks = async () => {\n//       try {\n//         const response = await fetch('http://localhost:3000/api/audiobooks/');\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         setResponse(response);\n//         const data = await response.json();\n//         console.log('Fetched data:', data);  // Debugging: Log fetched data\n//         setAudiobooks(data);\n//         setLoading(false);\n//       } catch (error) {\n//         console.error('Error fetching audiobooks:', error);\n//         setError(error.message);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchAudiobooks();\n//   }, []);\n\n//   if (loading) {\n//     return (\n//     <div>\n\n//       Loading...\n//       </div>);\n//   }\n\n//   if (error) {\n//     return <div>\n//       <div> {audiobooks.length}</div>\n//       <div> {response}</div>\n//       Error: {error}\n//       </div>;\n//   }\n\n//   return (\n//     <div className=\"audiobook-list-container\">\n//       {/* {audiobooks.length > 0 ? (\n//         <div className=\"audiobook-list\">\n//           <h>audiobooks.length</h>\n//           {audiobooks.map((audiobook) => (\n//             <div key={audiobook._id} className=\"audiobook-card\">\n//               <img src={audiobook.coverImage} alt={audiobook.title} className=\"audiobook-cover\" />\n//               <h2>{audiobook.title}</h2>\n//               <h3>by {audiobook.author}</h3>\n//               <p><strong>Genre:</strong> {audiobook.genre}</p>\n//               <p><strong>Description:</strong> {audiobook.description}</p>\n//               <p><strong>Rating:</strong> {audiobook.rating}</p>\n//             </div>\n//           ))}\n//         </div>\n//       ) : (\n//         <div>No audiobooks found</div>\n//       )} */}\n\n//       {audiobooks.map((audiobook) => (\n//         <AudiobookDetails key={audiobook._id} audiobook={audiobook} />\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default AudiobookList;\n\nimport React, { useEffect, useState } from 'react';\nimport AudiobookCard from './AudiobookCard';\nimport FilterBar from './FilterBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudiobookList = () => {\n  _s();\n  const [audiobooks, setAudiobooks] = useState([]);\n  const [filteredAudiobooks, setFilteredAudiobooks] = useState([]);\n  const [filters, setFilters] = useState({\n    author: '',\n    genre: '',\n    rating: ''\n  });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchAudiobooks = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/audiobooks');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('Fetched data:', data); // Debugging: Log fetched data\n        setAudiobooks(data);\n        setFilteredAudiobooks(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching audiobooks:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchAudiobooks();\n  }, []);\n  useEffect(() => {\n    if (audiobooks.length > 0) {\n      console.log('Applying filters:', filters); // Debugging: Log filters\n      let filtered = audiobooks;\n      if (filters.author) {\n        filtered = filtered.filter(audiobook => audiobook.author.toLowerCase().includes(filters.author.toLowerCase()));\n      }\n      if (filters.genre) {\n        filtered = filtered.filter(audiobook => audiobook.genre === filters.genre);\n      }\n      if (filters.rating) {\n        filtered = filtered.filter(audiobook => audiobook.rating >= parseInt(filters.rating, 10));\n      }\n      console.log('Filtered audiobooks:', filtered); // Debugging: Log filtered audiobooks\n      setFilteredAudiobooks(filtered);\n    }\n  }, [filters, audiobooks]);\n  const handleFilterChange = (type, value) => {\n    setFilters({\n      ...filters,\n      [type]: value\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audiobook-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(FilterBar, {\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audiobook-list\",\n      children: filteredAudiobooks.length > 0 ? filteredAudiobooks.map(audiobook => /*#__PURE__*/_jsxDEV(AudiobookCard, {\n        audiobook: audiobook\n      }, audiobook.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No audiobooks found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this) // Added a message if no audiobooks are found\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(AudiobookList, \"QI3tpcP1khcaCAlaJ3flK73XJIE=\");\n_c = AudiobookList;\nexport default AudiobookList;\nvar _c;\n$RefreshReg$(_c, \"AudiobookList\");","map":{"version":3,"names":["React","useEffect","useState","AudiobookCard","FilterBar","jsxDEV","_jsxDEV","AudiobookList","_s","audiobooks","setAudiobooks","filteredAudiobooks","setFilteredAudiobooks","filters","setFilters","author","genre","rating","error","setError","loading","setLoading","fetchAudiobooks","response","fetch","ok","Error","data","json","console","log","message","length","filtered","filter","audiobook","toLowerCase","includes","parseInt","handleFilterChange","type","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onFilterChange","map","id","_c","$RefreshReg$"],"sources":["/media/ashish/ubuntu/rating_system/src/components/AudiobookList.js"],"sourcesContent":["// // import { set } from 'mongoose';\n// import React, { useEffect, useState } from 'react';\n\n// import AudiobookDetails from './AudiobookCard'\n\n// const AudiobookList = () => {\n//   const [audiobooks, setAudiobooks] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const [response, setResponse] = useState(null);\n\n//   useEffect(() => {\n//     const fetchAudiobooks = async () => {\n//       try {\n//         const response = await fetch('http://localhost:3000/api/audiobooks/');\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         setResponse(response);\n//         const data = await response.json();\n//         console.log('Fetched data:', data);  // Debugging: Log fetched data\n//         setAudiobooks(data);\n//         setLoading(false);\n//       } catch (error) {\n//         console.error('Error fetching audiobooks:', error);\n//         setError(error.message);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchAudiobooks();\n//   }, []);\n\n//   if (loading) {\n//     return (\n//     <div>\n\n//       Loading...\n//       </div>);\n//   }\n\n//   if (error) {\n//     return <div>\n//       <div> {audiobooks.length}</div>\n//       <div> {response}</div>\n//       Error: {error}\n//       </div>;\n//   }\n\n//   return (\n//     <div className=\"audiobook-list-container\">\n//       {/* {audiobooks.length > 0 ? (\n//         <div className=\"audiobook-list\">\n//           <h>audiobooks.length</h>\n//           {audiobooks.map((audiobook) => (\n//             <div key={audiobook._id} className=\"audiobook-card\">\n//               <img src={audiobook.coverImage} alt={audiobook.title} className=\"audiobook-cover\" />\n//               <h2>{audiobook.title}</h2>\n//               <h3>by {audiobook.author}</h3>\n//               <p><strong>Genre:</strong> {audiobook.genre}</p>\n//               <p><strong>Description:</strong> {audiobook.description}</p>\n//               <p><strong>Rating:</strong> {audiobook.rating}</p>\n//             </div>\n//           ))}\n//         </div>\n//       ) : (\n//         <div>No audiobooks found</div>\n//       )} */}\n\n//       {audiobooks.map((audiobook) => (\n//         <AudiobookDetails key={audiobook._id} audiobook={audiobook} />\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default AudiobookList;\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport AudiobookCard from './AudiobookCard';\nimport FilterBar from './FilterBar';\n\nconst AudiobookList = () => {\n  const [audiobooks, setAudiobooks] = useState([]);\n  const [filteredAudiobooks, setFilteredAudiobooks] = useState([]);\n  const [filters, setFilters] = useState({ author: '', genre: '', rating: '' });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchAudiobooks = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/audiobooks');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('Fetched data:', data);  // Debugging: Log fetched data\n        setAudiobooks(data);\n        setFilteredAudiobooks(data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching audiobooks:', error);\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchAudiobooks();\n  }, []);\n\n  useEffect(() => {\n    if (audiobooks.length > 0) {\n      console.log('Applying filters:', filters);  // Debugging: Log filters\n      let filtered = audiobooks;\n      if (filters.author) {\n        filtered = filtered.filter(audiobook => audiobook.author.toLowerCase().includes(filters.author.toLowerCase()));\n      }\n      if (filters.genre) {\n        filtered = filtered.filter(audiobook => audiobook.genre === filters.genre);\n      }\n      if (filters.rating) {\n        filtered = filtered.filter(audiobook => audiobook.rating >= parseInt(filters.rating, 10));\n      }\n      console.log('Filtered audiobooks:', filtered);  // Debugging: Log filtered audiobooks\n      setFilteredAudiobooks(filtered);\n    }\n  }, [filters, audiobooks]);\n\n  const handleFilterChange = (type, value) => {\n    setFilters({ ...filters, [type]: value });\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"audiobook-list-container\">\n      <FilterBar onFilterChange={handleFilterChange} />\n      <div className=\"audiobook-list\">\n        {filteredAudiobooks.length > 0 ? (\n          filteredAudiobooks.map(audiobook => (\n            <AudiobookCard key={audiobook.id} audiobook={audiobook} />\n          ))\n        ) : (\n          <div>No audiobooks found</div>  // Added a message if no audiobooks are found\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AudiobookList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}